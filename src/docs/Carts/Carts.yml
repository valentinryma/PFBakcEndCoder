paths:
  /api/carts:
    get:
      summary: Devuelve todos los carritos
      tags:
        - Carts
      responses:
        "200":
          description: Operación resuelta con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    post:
      summary: Crea un nuevo carrito vacío
      tags:
        - Carts
      responses:
        "201":
          description: Carrito creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/carts/{id}:
    get:
      summary: Devuelve un carrito por ID
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        "200":
          description: Operación exitosa, devuelve el carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartNotFound'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      summary: Elimina un carrito por ID
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        "204":
          description: Carrito eliminado exitosamente, sin contenido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        "404":
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartNotFound'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un producto en un carrito.
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/Product'
      responses:
        "201":
          description: Operación exitosa, Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "400":
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          description: ID del carrito (generado por MongoDB)
        products:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
                description: ID del producto
              quantity: 
                type: number
                description: Cantidad del producto
      example:
        id: "668dbc4163c6af4a73c7d549"
        products:
          - id: "668dbc0063c6af4a73c7d541"
            quantity: 3
          - id: "668dbc4263c6af4a73c7d54b"
            quantity: 6
    
    Success:
      type: object
      properties:
        status:
          type: string
          description: Mensaje de confirmación ante una operación exitosa
      example:
        status: "success"

    BadRequest:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: "error"
        message: "Solicitud incorrecta"

    CartNotFound:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: "error"
        message: "Carrito no encontrado"

    ServerError:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: "error"
        message: "Error en el servidor"

    NoContent:
      type: object
      properties:
        status:
          type: string
          description: Mensaje de confirmación para respuestas sin contenido
        message:
          type: string
      example:
        status: "success"
        message: "No Content"

  requestBodies:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Título del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código único del producto
        status:
          type: boolean
          description: Disponibilidad del producto
        stock:
          type: number
          description: Stock del producto (cantidad de unidades)
        category:
          type: string
          description: Categoría del producto
        owner:
          type: string
          description: ID del creador del producto (generado por MongoDB)
        thumbnails:
          type: array
          items:
            type: string
      example:
        title: "Smartphone"
        price: 29388
        code: "ABC123"
        status: true
        stock: 2
        category: "electronics"
        owner: "664a5c70db6a15f01754bd6b"
        thumbnails:
          - "https://http2.mlstatic.com/D_NQ_NP_677855-MLA71570451917_092023-O.webp"